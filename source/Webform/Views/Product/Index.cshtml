@using Webform.Models;
@{
    Layout = "~/Views/Shared/_Master.cshtml";
    List<Product> products = ViewBag.Products;
    Webform.Controllers.Category[] categories = ViewBag.Categories;
    Webform.Controllers.Paginate paginate = ViewBag.Paginate;
}
@section title { "Manage Product" }

<div class="row" id="basic-table">
    <div class="col-12">
        <div class="card">
            <div class="row d-flex justify-content-between align-items-center m-1">
                <div class="col-lg-6 d-flex align-items-start">
                    <div class="dt-action-buttons text-xl-end text-lg-start text-lg-end text-start ">
                        <div class="dt-buttons">
                            <a href="@Url.Action("Create", "Product")" class="dt-button btn btn-primary btn-add-record ms-2" tabindex="0" aria-controls="DataTables_Table_0" type="button">
                                <span>Add Product</span>
                            </a>
                        </div>
                    </div>
                    <div class="dt-action-buttons text-xl-end text-lg-start text-lg-end text-start ">
                        <div class="dt-buttons">
                            <a href="@Url.Action("Import", "Product")" class="dt-button btn btn-success btn-add-record ms-2" tabindex="0" aria-controls="DataTables_Table_0" type="button">
                                <span>Import Products</span>
                            </a>
                        </div>
                    </div>
                </div>
                <div class="col-lg-6 d-flex align-items-center justify-content-lg-end flex-lg-nowrap flex-wrap pe-lg-1 p-0">
                    <div style="padding-right: 25px; width: 50%">
                        @{
                            string[] orderedAtArray = null;
                            string orderedAtString = string.Empty;
                            if (Request != null && Request.QueryString["ordered_at"] != null)
                            {
                                orderedAtArray = Request.QueryString["ordered_at"].Split(',');
                                orderedAtString = string.Join(" to ", orderedAtArray);
                            }
                        }
                        <input value="@orderedAtString" id="i-ordered_at" type="text" class="form-control flatpickr-range flatpickr-input active" placeholder="Filter order time range" readonly="readonly">
                    </div>
                    <div class="btn-group" style="padding-right: 25px">
                        <button type="button" class="btn btn-outline-primary dropdown-toggle waves-effect" data-bs-toggle="dropdown" aria-expanded="false">
                            @{ string qCategory = Request.QueryString["category"]; }
                            @if (qCategory == null)
                            {
                                @Html.Raw("All")
                            } else
                            {
                                @categories.Where(c => c.CategoryId.ToString().Equals(qCategory)).First().CategoryName
                            }
                        </button>
                        <div class="dropdown-menu">
                            <a class="dropdown-item" href="?category=">All</a>
                            @foreach (var category in categories) { 
                <a class="dropdown-item" href="?category=@category.CategoryId">@category.CategoryName</a>
                            }
                        </div>
                    </div>
                    <div>
                        <input type="search" id="i-search" name="q" value="@Request.QueryString["q"]" class="form-control" placeholder="Search">
                    </div>
                    <div class="invoice_status ms-sm-2"></div>
                </div>
            </div>
            <div class="table-responsive">
                <table class="table">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Price</th>
                            <th>Category</th>
                            <th>Created At</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (Product product in products)
                        {
                            <tr>
                                <td>
                                    <div data-bs-original-title="@product.name" data-bs-toggle="tooltip" data-popup="tooltip-custom" data-bs-placement="top" class="avatar avatar-xl pull-up my-0" title="">
                                        <img src="@product.image" alt="Avatar" height="26" width="26">
                                    </div>
                                    <span class="fw-bold">@product.name</span>
                                </td>
                                <td>@product.price</td>
                                <td>@categories.Where(c => c.CategoryId == product.category).First().CategoryName</td>
                                <td>@product.created_at</td>
                                <td>
                                    <div class="dropdown">
                                        <button type="button" class="btn btn-sm dropdown-toggle hide-arrow py-0 waves-effect waves-float waves-light" data-bs-toggle="dropdown">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-more-vertical"><circle cx="12" cy="12" r="1"></circle><circle cx="12" cy="5" r="1"></circle><circle cx="12" cy="19" r="1"></circle></svg>
                                        </button>
                                        <div class="dropdown-menu dropdown-menu-end">
                                            <a class="dropdown-item" href="{{ route('admin.warehouse.edit', ['product' => $product]) }}">
                                                <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-edit-2 me-50"><path d="M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z"></path></svg>
                                                <span>Edit</span>
                                            </a>
                                            <form action="{{ route('admin.warehouse.destroy', ['product' => $product]) }}" method="post">
                                                <button type="button" data-message="You are deleting product @product.name!" class="btn-del dropdown-item" style="width: 100%">
                                                    <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-trash me-50"><polyline points="3 6 5 6 21 6"></polyline><path d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"></path></svg>
                                                    <span>Delete</span>
                                                </button>
                                            </form>
                                        </div>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div class="m-3">
                @if (paginate.hasPages())
                {
                    <nav aria-label="Page navigation">
                        <div class="d-flex justify-content-between flex-fill d-sm-none">
                            <ul class="pagination">
                                @if (paginate.onFirstPage())
                                {
                                    <li class="page-item disabled" aria-disabled="true">
                                        <span class="page-link"><</span>
                                    </li>
                                }
                                else
                                {
                                    <li class="page-item">
                                        <a class="page-link" href="@paginate.previousPageUrl()" rel="prev"><</a>
                                    </li>
                                }
                                @if (paginate.hasMorePages())
                                {
                                    <li class="page-item">
                                        <a class="page-link" href="@paginate.nextPageUrl()" rel="next">></a>
                                    </li>
                                }
                                else
                                {
                                    <li class="page-item disabled" aria-disabled="true">
                                        <span class="page-link">></span>
                                    </li>
                                }
                            </ul>
                        </div>
                        <div class="d-none flex-sm-fill d-sm-flex align-items-sm-center justify-content-sm-between">
                            <div>
                                <ul class="pagination">
                                    @if (paginate.onFirstPage())
                                    {
                                        <li class="page-item disabled" aria-disabled="true" aria-label="<">
                                            <span class="page-link" aria-hidden="true">&lsaquo;</span>
                                        </li>
                                    }
                                    else
                                    {
                                        <li class="page-item">
                                            <a class="page-link" href="@paginate.previousPageUrl()" rel="prev" aria-label="<">&lsaquo;</a>
                                        </li>
                                    }
                                    @for (int i = 1; i <= paginate.totalPages; i++)
                                    {
                                        if (i == paginate.currentPage)
                                        {
                                            <li class="page-item active" aria-current="page"><span class="page-link">@i</span></li>
                                        }
                                        else
                                        {
                                            <li class="page-item"><a class="page-link" href="?page=@i">@i</a></li>
                                        }
                                    }
                                    @if (@paginate.hasMorePages())
                                    {
                                        <li class="page-item">
                                            <a class="page-link" href="@paginate.nextPageUrl()" rel="next" aria-label=">">&rsaquo;</a>
                                        </li>
                                    }
                                    else
                                    {
                                        <li class="page-item disabled" aria-disabled="true" aria-label=">">
                                            <span class="page-link" aria-hidden="true">&rsaquo;</span>
                                        </li>
                                    }
                                </ul>
                            </div>
                        </div>
                    </nav>
                }
            </div>
        </div>
    </div>
</div>


@section script{
    <script src="@Url.Content("~/Assets/assets/js/handle_search.js")"></script>
    <script src="@Url.Content("~/Assets/assets/js/alert.js")"></script>
    <script>alertDangerEvent('.btn-del')</script>
    @if (TempData["success"] != null)
    {
        <script>
        Swal.fire({
            icon: 'success',
            title: 'Successfully!',
            text: '@TempData["success"]',
            customClass: {
                confirmButton: 'btn btn-success'
            }
        });
        </script>
    }


}